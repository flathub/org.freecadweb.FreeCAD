diff --git a/src/Mod/OpenSCAD/InitGui.py b/src/Mod/OpenSCAD/InitGui.py
index b67c806da5..6dbbfcc69f 100644
--- a/src/Mod/OpenSCAD/InitGui.py
+++ b/src/Mod/OpenSCAD/InitGui.py
@@ -118,7 +118,7 @@ class OpenSCADWorkbench(Workbench):
         else:
             FreeCAD.Console.PrintWarning("OpenSCAD executable not found\n")
 
-        transferMechanism = param.GetInt("transfermechanism", 0)
+        transferMechanism = param.GetInt("transfermechanism", 2)
         if openscadfilename and transferMechanism == 0:  
             # We are using the Python temp-directory creation function
             if "snap" in openscadfilename:
diff --git a/src/Mod/OpenSCAD/OpenSCADTest/app/test_importCSG.py b/src/Mod/OpenSCAD/OpenSCADTest/app/test_importCSG.py
index 3edd93db26..371e220bc2 100644
--- a/src/Mod/OpenSCAD/OpenSCADTest/app/test_importCSG.py
+++ b/src/Mod/OpenSCAD/OpenSCADTest/app/test_importCSG.py
@@ -273,7 +273,7 @@ polyhedron(
 
     def test_import_import_stl(self):
         preferences = FreeCAD.ParamGet("User parameter:BaseApp/Preferences/Mod/OpenSCAD")
-        transfer_mechanism = preferences.GetInt('transfermechanism',0)
+        transfer_mechanism = preferences.GetInt('transfermechanism',2)
         if transfer_mechanism == 2:
             print ("Cannot test STL import, communication with OpenSCAD is via pipes")
             print ("If either OpenSCAD or FreeCAD are installed as sandboxed packages,")
diff --git a/src/Mod/OpenSCAD/OpenSCADUtils.py b/src/Mod/OpenSCAD/OpenSCADUtils.py
index 5ed6710f56..1e5e0f34e1 100644
--- a/src/Mod/OpenSCAD/OpenSCADUtils.py
+++ b/src/Mod/OpenSCAD/OpenSCADUtils.py
@@ -189,7 +189,7 @@ def callopenscad(inputfilename,outputfilename=None, outputext='csg', keepname=Fa
 
     preferences = FreeCAD.ParamGet("User parameter:BaseApp/Preferences/Mod/OpenSCAD")
     osfilename = preferences.GetString('openscadexecutable')
-    transferMechanism = preferences.GetInt('transfermechanism',0)
+    transferMechanism = preferences.GetInt('transfermechanism',2)
     if transferMechanism == 0: # Use the Python temp-directory creation function
         transferDirectory = tempfile.gettempdir()
     elif transferMechanism == 1: # Use a user-specified directory for the transfer
